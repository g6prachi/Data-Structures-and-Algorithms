public class Solution {
    public void rotate(ArrayList<ArrayList<Integer>> a) {
        
        int n = a.size();
       
        for(int i = 0; i < n / 2; i++){
            for(int j = i; j < n - 1 - i; j++){
            //Both loops combined rotate one layer of the matrix at a time
            //eg. i = 0 denotes the outermost layer, i.e., the first and last rows and columns, both.
                
                //for each arr[i][j], after rotation is found at arr[j][n - 1 - i]
                
                //for anti-clockwise rotation, swap in the opposite order
                
                int temp = a.get(j).get(n - 1 - i);
                a.get(j).set(n - 1 - i, a.get(i).get(j));
                    
                int temp2 = a.get(n - 1 - i).get(n - 1 - j);
                a.get(n - 1 - i).set(n - 1 - j, temp);
                    
                temp = a.get(n - 1 - j).get(i);
                a.get(n - 1 - j).set(i, temp2);
                    
                a.get(i).set(j, temp);
                                    
            }
            
        }
        
    }
}
